server:
  url: http://localhost:${server.port}
  port: 51073
  
spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  data:
    mongodb:
      database: mp_beneficiaries
      host: localhost
      
logging:
  level:
    org.springframework.data.mongodb.core.ReactiveMongoTemplate: DEBUG
   
management:
  endpoints:
    web:
      exposure:
        include: "*"    
    
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    statusPageUrlPath: /actuator/info
    healthCheckUrlPath: /actuator/health      
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
   
amqp:
  beneficiaries:
    queue:
      beneficiary:
        created:
          request: beneficiary_created_response_queue
        updated:
          request: beneficiary_updated_response_queue
          payout-rules-marketplace:
            request: beneficiary_marketplace-payout-rules_updated_response_queue
      transaction-capture:
        added:
          response: transaction_capture_added_beneficiary_response_queue
      transaction-refund:
        added:
          response: transaction_refund_added_beneficiary_response_queue
        
    exchange:
      completed:
        status_update: beneficiary_notifications
      beneficiary:
        created: created_beneficiary_production
        updated: updated_beneficiary_production
      beneficiary-default-payout-rules:
        updated: updated_beneficiary_default_payout_rules
      beneficiary-status:
        updated: updated_beneficiary_status
      beneficiary-transaction-capture:
        decomposed: decomposed_beneficiary_transaction_capture
      beneficiary-transaction-refund:
        decomposed: decomposed_beneficiary_transaction_refund
    
  events:
    queue:
      created:
        request: createad_event_queue
    exchange:
      created: created_events
    key:
      created:
        request: events          
  
security:
  oauth2:
    resource:
      userInfoUri: http://localhost:8880/validateClient
      
auth:
  service: MP-AUTHSERVER
  path: /oauth/token      
      
oauth:
  client_id: mp_beneficiary_client
  client_secret: MjYgNDcgZjYgZTAgMDcgYzUgZmIgODYgNmMgNzIgOTkgMmEgMGYgN2EgNWEg

marketplace:
  notification:
    service: MP-MarketNotifications
    
smoney:
  service: MP-MoneyProvider
    
marketplaces:
  service: MP-MarketPlaces

---
spring:
  profiles: integration
  data:
    mongodb:
      database: mp_beneficiaries
      host: localhost
      port: 27018
  rabbitmq:
    host: rabbitmq.o2c.ovh
    port: 5672
    username: master-pay
    password: master123

server:
  url: http://o2c.ovh:${server.port}

---
spring:
  profiles: qa
  data:
    mongodb:
      database: mp_beneficiaries
      host: localhost
      port: 27018
  rabbitmq:
    host: localhost
    port: 5672
    username: master-pay
    password: master123

server:
  url: http://qa.o2c.ovh:${server.port}
