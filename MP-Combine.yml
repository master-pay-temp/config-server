server:
  port: 51045
  
spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  data:
    mongodb:
      database: mp_combine
      host: localhost    
    
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    statusPageUrlPath: /actuator/info
    healthCheckUrlPath: /actuator/health      
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    
logging: 
  level: 
    org.springframework.data.mongodb.core.ReactiveMongoTemplate: DEBUG
  
breakdowns:
  service: MP-BREAKDOWNS
  
balances:
  service: MP-BALANCES
  
beneficiaries:
  service: MP-BENEFICIARIES  

oauth:
  client_id: mp_combine_client
  client_secret: YTkgMmUgMjUgYjcgNzMgNmYgMDEgYjQgZGUgMzcgMWUgOGYgNWUgZjMgN2Ig

auth:
  service: MP-AUTHSERVER
  path: /oauth/token  
  
security:
  oauth2:
    resource:
      userInfoUri: http://localhost:8880/validateClient  

management:
  endpoints:
    web:
      exposure:
        include: "*"    
amqp:
  combine:
    exchange:
      created:
        combine: created_combine
            
  events:
    queue:
      created:
        request: createad_event_queue
    exchange:
      created: created_events
    key:
      created:
        request: events   
        
---
spring:
  profiles: integration
  data:
    mongodb:
      database: mp_combine
      host: localhost
      port: 27018     
  rabbitmq:
    host: rabbitmq.o2c.ovh
    port: 5672
    username: master-pay
    password: master123      

server:
  url: http://o2c.ovh:${server.port}
  
---
spring:
  profiles: qa
  data:
    mongodb:
      database: mp_combine
      host: localhost
      port: 27018     
  rabbitmq:
    host: localhost
    port: 5672
    username: master-pay
    password: master123      

server:
  url: http://qa.o2c.ovh:${server.port}
  
